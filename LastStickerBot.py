import logging
import os
import sys
import tarfile
import telebot
import telegram
from LastStickerStat import *

with open("last-sticker-bot-token.txt", "r") as f:
    token = f.read()
stat = LastStickerStat(sys.argv[1], token)

with open("bot_config.json", "r") as f:
    bot_config = json.load(f)

bot = telebot.TeleBot(token)
is_confirmed = {}  # –ù–∞–ø—Ä–∏–º–µ—Ä, is_confirmed[id]["show_links_confirmed"] == True, –∑–Ω–∞—á–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
# –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª, —á—Ç–æ —Ö–æ—á–µ—Ç –≤—ã–∑–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /links (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –µ–µ)

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)


# –î–µ–ª–∞–µ–º –∏–∑ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ –¥–≤—É—Ö–∑–Ω–∞—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–µ–∑–Ω–∞—á–∞—â–µ–≥–æ –Ω—É–ª—è. –ù—É–∂–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞—Ç—ã-–≤—Ä–µ–º–µ–Ω–∏ –≤ –ø—Ä–∏–≤—ã—á–Ω–æ–º
# –≤–∏–¥–µ, —Ç.–µ. –Ω–µ 5:1, –∞ 05:01
def double_digit(number):
    if len(number) == 1:
        number = "0" + number
    return number


# –í—ã–≤–æ–¥–∏–º –¥–∞—Ç—É-–≤—Ä–µ–º—è –≤ –ø—Ä–∏–≤—ã—á–Ω–æ–º –≤–∏–¥–µ (—Å –Ω–µ–∑–Ω–∞—á–∞—â–∏–º–∏ –Ω—É–ª—è–º–∏)
def prettify_datetime(datetime):
    datetime_lst = datetime.split(" ")
    time_lst = datetime_lst[0].split(":")
    date_lst = datetime_lst[1].split(".")
    time = double_digit(time_lst[0]) + ":" + double_digit(time_lst[1])
    date = double_digit(date_lst[0]) + "." + double_digit(date_lst[1]) + "." + date_lst[2]
    datetime = time + " " + date
    return datetime


# –°–æ–∑–¥–∞–µ–º csv —Ñ–∞–π–ª —Å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
def create_filtered_data(path, df):
    if os.path.isfile(path):
        number = 1
        while os.path.isfile(str(number) + path):
            number += 1
        path = str(number) + path
    df.to_csv(path, sep=";", index=False)
    return path


# –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –±—É–ª–µ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –æ—Ç–≤–µ—á–∞—é—â–∏—Ö –∑–∞ —Ç–æ, –±—ã–ª–æ –ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# –ø–æ —Ç–æ–π –∏–ª–∏ –∏–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑. —Ñ–∏–ª—å—Ç—Ä–∞, –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ)
def reset_confirmations(user_id):
    global is_confirmed
    if user_id not in is_confirmed:
        is_confirmed[user_id] = {}
    is_confirmed[user_id]["delete_confirmed"] = (False, "")  # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
    is_confirmed[user_id]["show_links_confirmed"] = False
    is_confirmed[user_id]["delete_all_users_confirmed"] = False
    is_confirmed[user_id]["download_confirmed"] = False


# –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª bot_config, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π id –∞–¥–º–∏–Ω–æ–≤ –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def rewrite_bot_config():
    global bot_config
    with open("bot_config.json", "w") as f:
        json.dump(bot_config, f)


# –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º —Ñ–∞–π–ª –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
def send_archived(file_path, user_id):
    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, "–°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –∏ –≤—ã—Å—ã–ª–∞–µ–º")

    archive_path = file_path + ".tar.gz"
    with tarfile.open(archive_path, "w:gz") as tar:
        tar.add(file_path)

    bot.send_chat_action(user_id, action=telegram.ChatAction.UPLOAD_DOCUMENT)
    with open(archive_path, "rb") as f:
        bot.send_document(user_id, f)

    os.remove(archive_path)



# –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—â–µ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É, —Ç–æ –æ–Ω –æ–± —ç—Ç–æ–º –æ–ø–æ–≤–µ—â–∞–µ—Ç—Å—è –∏ –µ–º—É –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è
# –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –Ω–∏–∫ –Ω–∞ —Å–∞–π—Ç–µ laststicker (—á—Ç–æ–±—ã –∞–¥–º–∏–Ω—ã –ø–æ–Ω–∏–º–∞–ª–∏, —á—Ç–æ –∑–∞ —á–µ–ª–æ–≤–µ–∫, —Å –∫–∞–∫–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π –Ω–∞ —Å–∞–π—Ç–µ)
# –ê–¥–º–∏–Ω—ã –æ–ø–æ–≤–µ—â–∞—é—Ç—Å—è –æ –ø–æ–ø—ã—Ç–∫–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ –ª–∏—Ü–∞
@bot.message_handler(commands=['start'], func=lambda msg: msg.from_user.id not in bot_config["allowed_ids"])
def handle_unknown_start(message):
    global bot_config
    user_id = message.from_user.id
    user_name = message.from_user.username
    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    msg1 = "–ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –Ω–∏–∫ –Ω–∞ —Å–∞–π—Ç–µ laststicker.ru, "
    msg1 += "—á—Ç–æ–±—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ–Ω–∏–º–∞–ª–∏, –∫–æ–º—É —ç—Ç–æ—Ç –±–æ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω"
    bot.send_message(user_id, msg1)
    msg2 = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{} (id = {}) –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª —Å –±–æ—Ç–æ–º".format(user_name, user_id)
    for admin_id in bot_config["ADMIN_IDS"]:
        bot.send_message(admin_id, msg2)


# –ï—Å–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç–∏–ª (—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–∞–ø–∏—Å–∞–ª –Ω–∏–∫), —ç—Ç–æ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç—Å—è –∞–¥–º–∏–Ω–∞–º. –û–Ω–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç –≤—Å–µ, —á—Ç–æ
# –Ω–∞–¥–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∏ —Ä–µ—à–∞—é—Ç –¥–∞–≤–∞—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–ª–∏ –Ω–µ—Ç
@bot.message_handler(func=lambda msg: msg.from_user.id not in bot_config["allowed_ids"])
def handle_unknown(message):
    global bot_config
    user_id = message.from_user.id
    user_name = message.from_user.username
    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, "–ü–µ—Ä–µ—Å–ª–∞–ª–∏ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º üëå –ü–æ–∫–∞ –≤–∞–º –Ω–µ –¥–∞–ª–∏ –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É –±–æ—Ç–∞")
    msg = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{} (id = {}) –ø—Ä–∏—Å–ª–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –Ω–∏–∫ –Ω–∞ laststicker".format(user_name, user_id)
    for admin_id in bot_config["ADMIN_IDS"]:
        bot.send_message(admin_id, msg)
        bot.forward_message(admin_id, user_id, message.message_id)


# –î–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É
@bot.message_handler(commands=['adduser'])
def handle_add_user(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)
    global bot_config
    try:
        new_user_id = int(message.text[len("/adduser "):])
        if user_id in bot_config["ADMIN_IDS"] and new_user_id not in bot_config["allowed_ids"]:
            bot_config["allowed_ids"].append(new_user_id)
            rewrite_bot_config()
            msg = "[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é](tg://user?id={}) —É—Å–ø–µ—à–Ω–æ –¥–∞–Ω –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É. –û–ø–æ–≤–µ—Å—Ç–∏–ª–∏ –µ–≥–æ –æ–± —ç—Ç–æ–º üëå".format(
                new_user_id)
            bot.send_message(new_user_id, "–í–∞–º –¥–∞–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É @LastStickerStatBot")
        elif user_id in bot_config["ADMIN_IDS"]:
            msg = "[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é](tg://user?id={}) —É–∂–µ –¥–∞–Ω –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É".format(new_user_id)
        else:
            msg = "–í—ã –Ω–µ –∞–¥–º–∏–Ω, —É –≤–∞—Å –Ω–µ—Ç –ø–æ–ª–Ω–æ–º–æ—á–∏–π —Ä–∞–∑–¥–∞–≤–∞—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É üò†"
    except Exception:
        msg = "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫ –±–æ—Ç—É üòû –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è id. "
        msg += "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –¥–æ –∏/–∏–ª–∏ –ø–æ—Å–ª–µ –Ω–µ–≥–æ –µ—Å—Ç—å –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã (–ø—Ä–æ–±–µ–ª—ã/—Ç–∞–±—É–ª—è—Ü–∏—è/–ø–µ—Ä–µ–Ω–æ—Å—ã –∏ —Ç. –¥.)"
    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, msg, parse_mode="Markdown")


# –û—Ç–±–∏—Ä–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É
@bot.message_handler(commands=['deleteuser'])
def handle_delete_user(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)
    global bot_config
    try:
        user_id_to_delete = int(message.text[len("/deleteuser "):])
        if user_id in bot_config["ADMIN_IDS"] and user_id_to_delete in bot_config["ADMIN_IDS"]:
            msg = "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø –∞–¥–º–∏–Ω—É"
        elif user_id in bot_config["ADMIN_IDS"] and user_id_to_delete in bot_config["allowed_ids"]:
            bot_config["allowed_ids"].remove(int(message.text[len('adduser '):]))
            rewrite_bot_config()
            msg = "[–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å](tg://user?id={}) –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º üëå".format(user_id_to_delete)
        elif user_id in bot_config["ADMIN_IDS"]:
            msg = "–£ [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è](tg://user?id={}) –∏ –Ω–µ –±—ã–ª–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É".format(user_id_to_delete)
        else:
            msg = "–í—ã –Ω–µ –∞–¥–º–∏–Ω, —É –≤–∞—Å –Ω–µ—Ç –ø–æ–ª–Ω–æ–º–æ—á–∏–π –æ—Ç–±–∏—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É üò†"
    except Exception:
        msg = "–ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ —Ç–µ—Ö, –∫—Ç–æ –º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º üòû "
        msg += "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è id. –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –¥–æ –∏/–∏–ª–∏ –ø–æ—Å–ª–µ –Ω–µ–≥–æ –µ—Å—Ç—å –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã "
        msg += "(–ø—Ä–æ–±–µ–ª—ã/—Ç–∞–±—É–ª—è—Ü–∏—è/–ø–µ—Ä–µ–Ω–æ—Å—ã –∏ —Ç. –¥.)"
    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, msg, parse_mode="Markdown")


# –û—Ç–±–∏—Ä–∞–µ–º –¥–æ—Å—Ç—É–ø —É –≤—Å–µ—Ö –ù–ï –∞–¥–º–∏–Ω–æ–≤
@bot.message_handler(commands=['deleteallusers'])
def handle_delete_all_users(message):
    user_id = message.from_user.id
    global bot_config

    if user_id not in bot_config["ADMIN_IDS"]:
        bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
        bot.send_message(user_id, "–í—ã –Ω–µ –∞–¥–º–∏–Ω, —É –≤–∞—Å –Ω–µ—Ç –ø–æ–ª–Ω–æ–º–æ—á–∏–π –æ—Ç–±–∏—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É üò†")
        reset_confirmations(user_id)
        return

    global is_confirmed
    is_confirmed.setdefault(user_id, {"delete_all_users_confirmed": False})
    delete_all_users_confirmed = is_confirmed[user_id].setdefault("delete_all_users_confirmed", False)
    reset_confirmations(user_id)

    if not delete_all_users_confirmed:
        msg = "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–æ–≤? "
        msg += "–ï—Å–ª–∏ –¥–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /deleteallusers"
        is_confirmed[user_id]["delete_all_users_confirmed"] = True
    else:
        bot_config["allowed_ids"] = bot_config["ADMIN_IDS"][:]
        rewrite_bot_config()
        msg = "–£—Å–ø–µ—à–Ω–æ. –¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø—ã –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –∞–¥–º–∏–Ω–æ–≤"
    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, msg)


# –í—ã–¥–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
@bot.message_handler(commands=['start'])
def handle_start(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)

    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    msg = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç *LastStickerStat*\!ü•≥ü•≥ü•≥ü•≥\n–ó–¥–µ—Å—å –º—ã –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ "
    msg += "–ª–æ—Ç–∞–º —Å–∞–π—Ç–∞ laststicker\.ru\n\n–í–æ—Ç, —á—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç \(/help\)"
    bot.send_message(user_id, msg, parse_mode='MarkdownV2')
    handle_help(message)


# –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º (–∫–∞–∫–∏–µ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ –æ–Ω–∏ –¥–µ–ª–∞—é—Ç)
@bot.message_handler(commands=['help'])
def handle_help(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)
    global bot_config

    msg = "/info - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–º–µ—Ä (–≤ –ú–ë) .csv —Ñ–∞–π–ª–∞ —Å –±–∞–∑–æ–π, –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, " \
          "—Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–º–µ—é—â–∏–π—Å—è –≤ –±–∞–∑–µ –ª–æ—Ç\n"
    msg += "/links - –ø–æ–∫–∞–∑–∞—Ç—å url –Ω–µ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü (–≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ –±—É–¥—É—Ç —Ñ–æ—Ä—É–º–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, " \
           "—Ç. –∫. –æ–Ω–∏ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç –Ω–∏–∫–∞–∫–æ–π –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞; –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ —Å–ª—É—á–∞–π–Ω–æ " \
           "—Ç—É–¥–∞ –ø–æ–ø–∞–¥–µ—Ç —á—Ç–æ-—Ç–æ —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω–æ–µ)\n"
    msg += "/download - –≤—ã—Å–ª–∞—Ç—å —Ñ–∞–π–ª .csv, –≥–¥–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –≤—Å–µ—Ö –ª–æ—Ç–æ–≤ —Å–∞–π—Ç–∞ –¥–æ –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è\n"
    msg += "/update - –æ–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –ª–æ—Ç–æ–≤\n"
    msg += "/howfilter - –ø–æ–∫–∞–∑–∞—Ç—å, *–∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π* (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∫ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—é –ø–µ—Ä–µ–¥ " \
           "–ø–µ—Ä–≤—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º)\n"
    msg += "/filter ... - –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É ...\n"
    msg += "/showfilters - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤\n"
    msg += "/newfilter _name_ ... - —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä —Å –∏–º–µ–Ω–µ–º _name_ –∏ –∑–∞–ø—Ä–æ—Å–æ–º ... " \
           "*–ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π!*\n"
    msg += "/deletefilter _name_ - —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä —Å –∏–º–µ–Ω–µ–º _name_"

    if user_id in bot_config["ADMIN_IDS"]:
        msg += "\n\n*–î–õ–Ø –ê–î–ú–ò–ù–û–í*:\n"
        msg += "/downloadall - —Å–∫–∞—á–∞—Ç—å –ø–∞–ø–∫—É —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –æ –±–∞–∑–µ: –≤—Å–µ .csv (–æ—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –∏ " \
               "–±–∞–∑–∞ –≤–µ—Ä—Ö–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞) –∏ .json (–ø–∞–ø–∫–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ " \
               "—Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±–∞–∑—ã) —Ñ–∞–π–ª—ã\n"
        msg += "/adduser _id_ - –¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º _id_ –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É\n"
        msg += "/deleteuser _id_ - –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º _id_ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º\n"
        msg += "/deleteallusers - –æ—Ç–æ–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É —É –≤—Å–µ—Ö, –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–æ–≤\n"
        msg += "/notify - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–≤ —Ä–∞–∑–º–µ—Ç–∫–µ Markdown) –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞"

    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, msg, parse_mode="Markdown")


# –í—ã–≥—Ä—É–∂–∞–µ–º –±–∞–∑—É –∏ –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–π –∏ –±–æ—Ç–µ
@bot.message_handler(commands=['downloadall'])
def handle_download_all(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)
    global bot_config

    if user_id not in bot_config["ADMIN_IDS"]:
        bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
        bot.send_message(user_id, "–í—ã –Ω–µ –∞–¥–º–∏–Ω, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º üòü")
        return
    
    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, "–°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –∏ –≤—ã—Å—ã–ª–∞–µ–º")

    archive_path = stat.dir_path + ".tar.gz"
    with tarfile.open(archive_path, "w:gz") as tar:
        for root, dirs, files in os.walk(stat.dir_path):
            for file in files:
                tar.add(os.path.join(root, file))

    archive_size = os.path.getsize(archive_path)
    if archive_size >= (50 * 1024 * 1024):  # –µ—Å–ª–∏ —Ñ–∞–π–ª –±–æ–ª—å—à–µ 50 –ú–ë, —Å–µ—Ä–≤–µ—Ä—ã Telegram –Ω–µ –±—É–¥—É—Ç –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
        bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
        msg = "‚ùóÔ∏è –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–µ–Ω 50 –ú–ë, —á—Ç–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä—ã " \
              "Telegram ‚ùóÔ∏è –ü–æ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Local API, —á—Ç–æ–±—ã —ç—Ç–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–Ω—è–ª–∏—Å—å"
        bot.send_message(user_id, msg)
    else:
        bot.send_chat_action(user_id, action=telegram.ChatAction.UPLOAD_DOCUMENT)
        with open(archive_path, "rb") as f:
            bot.send_document(user_id, f)


# –í—ã–≥—Ä—É–∂–∞–µ–º –±–∞–∑—É –≤ csv —Ñ–∞–π–ª–µ
@bot.message_handler(commands=['download'])
def handle_download(message):
    user_id = message.from_user.id

    csv_size = os.path.getsize(stat.csv_path)
    if csv_size < (50 * 1024 * 1024):
        reset_confirmations(user_id)
        lots = stat.info["lots_amount"]
        datetime = prettify_datetime(stat.info["last_lot_parse_date"])
        fails = len(stat.info["unparsed_pages"])

        msg = "–í—Å–µ–≥–æ –ª–æ—Ç–æ–≤: {}".format(lots)
        msg += "\n–ù–µ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫: " + str(fails)
        msg += "\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: " + datetime
        msg += "\n–ù–∞–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /update, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ."

        bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
        bot.send_message(user_id, msg)

        bot.send_chat_action(user_id, action=telegram.ChatAction.UPLOAD_DOCUMENT)
        with open(stat.csv_path, "r") as f:
            bot.send_document(user_id, f)
    else:
        global is_confirmed
        is_confirmed.setdefault(user_id, {"download_confirmed": False})
        download_confirmed = is_confirmed[user_id].setdefault("download_confirmed", False)
        reset_confirmations(user_id)

        if not download_confirmed:
            is_confirmed[user_id]["download_confirmed"] = True
            msg = "‚ùóÔ∏è –†–∞–∑–º–µ—Ä csv –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–µ–Ω 50 –ú–ë, —á—Ç–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ " \
                  "—á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä—ã Telegram ‚ùóÔ∏è\n –•–æ—Ç–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –∞—Ä—Ö–∏–≤–æ–º? –ï—Å–ª–∏ –¥–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /download"
            bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
            bot.send_message(user_id, msg)
        else:
            send_archived(stat.csv_path, user_id)


# –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –Ω–µ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –∏–ª–∏ –≤—ã–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —Å —Ç–∞–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π (–µ—Å–ª–∏ —Å—Å—ã–ª–æ–∫ –±–æ–ª—å—à–µ 15)
@bot.message_handler(commands=["links"])
def handle_links(message):
    user_id = message.from_user.id

    fails = stat.info["unparsed_pages"]
    global is_confirmed
    is_confirmed.setdefault(user_id, {"show_links_confirmed": False})
    show_links_confirmed = is_confirmed[user_id].setdefault("show_links_confirmed", False)
    reset_confirmations(user_id)

    if len(fails) <= 15:  # –¥–æ 15 –≤–∫–ª. —Å—Å—ã–ª–æ–∫ –º–æ–∂–µ–º –≤—ã–≤–µ—Å—Ç–∏ –≤ —á–∞—Ç, –∏–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –≤ csv —Ñ–∞–π–ª–µ
        msg = "–°—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å:"
        for url in fails:
            msg += "\n" + url
    elif not show_links_confirmed:
        msg = "–í—Å–µ–≥–æ {} –Ω–µ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–∫–∏. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫? ".format(len(fails))
        msg += "–ï—Å–ª–∏ –¥–∞, —Ç–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /links –∏ –≤—ã—à–ª–µ–º csv —Ñ–∞–π–ª —Å–æ —Å–ø–∏—Å–∫–æ–º"
        is_confirmed[user_id]["show_links_confirmed"] = True
    else:
        bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
        bot.send_message(user_id, "–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∏ –≤—ã—Å—ã–ª–∞–µ–º")

        file_path = "unparsed_url.csv"
        pd.DataFrame(fails, columns=["unparsed_url"]).to_csv(file_path, index=False)

        bot.send_chat_action(user_id, action=telegram.ChatAction.UPLOAD_DOCUMENT)
        with open(file_path, "r") as f:
            bot.send_document(user_id, f)
        return

    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, msg)


# –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É (–µ—Å–ª–∏ –Ω–∏–∫—Ç–æ –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª —ç—Ç–æ –¥–µ–ª–∞—Ç—å)
@bot.message_handler(commands=["update"], func=lambda msg: stat.upd_allowed)
def handle_update(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)
    stat.upd_allowed = False

    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, "–°–Ω–∞—á–∞–ª–∞ –æ–±–Ω–æ–≤–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∑–∞–ø–∏—Å—è–º, –ø–æ—Ç–æ–º –ø–æ–¥–≥—Ä—É–∑–∏–º –Ω–æ–≤—ã–µ")

    last_lot_parse_date, last_lot_url, pages = stat.update(user_id)
    stat.upd_allowed = True

    msg = "\n–ü–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ—Ç " + last_lot_url + " –∑–∞–≥—Ä—É–∂–µ–Ω –≤ " + prettify_datetime(last_lot_parse_date)
    msg += "\n–í—Å–µ–≥–æ –Ω–æ–≤—ã—Ö –ª–æ—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: " + str(pages)

    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, msg)


# –ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ —É–∂–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–∑—É, —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
@bot.message_handler(commands=["update"])
def handle_update_not_allowed(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)

    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è üïû –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∏—Ö –ø–æ–∑–¥–Ω–µ–µ")


# –í—ã–≤–æ–¥–∏–º –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±–∞–∑—ã (—Ä–∞–∑–º–µ—Ä –±–∞–∑—ã –≤ –ú–ë, –∫–æ–ª-–≤–æ –∑–∞–ø–∏—Å–µ–π, –¥–∞—Ç–∞
# –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ—Ç
@bot.message_handler(commands=["info"])
def handle_info(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)

    csv_size = round(os.path.getsize(stat.csv_path) / (1024 * 1024), 2)
    msg = "–†–∞–∑–º–µ—Ä csv —Ñ–∞–π–ª–∞: {} –ú–ë\n–í—Å–µ–≥–æ –ª–æ—Ç–æ–≤: {}".format(csv_size, stat.info["lots_amount"])
    msg += "\n–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: "
    datetime = stat.info.get("last_lot_parse_date", "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
    if datetime != "–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö":
        datetime = prettify_datetime(datetime)
    msg += datetime
    msg += "\n–ü–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ—Ç –≤ –±–∞–∑–µ: " + stat.MAIN_URL + "/auction/post" + str(stat.info["last_lot_url_id"]) + "/"

    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, msg)


# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä
@bot.message_handler(commands=["newfilter"])
def handle_new_filter(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)

    if message.text == "/newfilter":  # –µ—Å–ª–∏ –Ω–∞–±—Ä–∞–ª–∏ /newfilter –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
        msg = "–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π /newfilter\n\n"
        msg += "/newfilter _–ò–ú–Ø_ _–û–ü–ï–†–ê–¶–ò–Ø_ _{–ö–õ–Æ–ß–ï–í–û–ï –°–õ–û–í–û=–ó–ù–ê–ß–ï–ù–ò–ï}_\n\n"
        msg += "*–ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π!* –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –º–µ–∂–¥—É " \
               "/newfilter, _–ò–ú–Ø_ –∏ _–û–ü–ï–†–ê–¶–ò–Ø_ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ *–æ–¥–Ω–æ–º—É –ø—Ä–æ–±–µ–ª—É*. "
        msg += "–°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∏ –∏—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /howfilter"
        bot.send_message(user_id, msg, parse_mode="Markdown")
        return

    request = message.text[len("/newfilter "):]

    msg = stat.create_new_filter(request, user_id)
    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, msg, parse_mode="Markdown")


# –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä
@bot.message_handler(commands=["deletefilter"])
def handle_delete_filter(message):
    user_id = message.from_user.id

    if message.text == "/deletefilter":  # –µ—Å–ª–∏ –Ω–∞–±—Ä–∞–ª–∏ /deletefilter –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
        msg = "–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π /deletefilter\n\n"
        msg += "/deletefilter _–ò–ú–Ø_\n\n"
        msg += "–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –º–µ–∂–¥—É /deletefilter –∏ _–ò–ú–Ø_ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å *–æ–¥–∏–Ω –ø—Ä–æ–±–µ–ª*. _–ò–ú–Ø_ " \
               "–¥–æ–ª–∂–Ω–æ —Å —Ç–æ—á–Ω–æ—Å—Ç—å –¥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞ –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–¥–∞–ª—è–µ–º–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞"
        bot.send_message(user_id, msg, parse_mode="Markdown")
        return

    global is_confirmed
    is_confirmed.setdefault(user_id, {"delete_confirmed": (False, "")})
    delete_confirmed = is_confirmed[user_id].setdefault("delete_confirmed", (False, ""))

    filter_name = message.text[len("/deletefilter "):]
    if not delete_confirmed[0] or delete_confirmed[1] != message.text:  # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        msg = "‚ùóÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —Å–±–æ—è–º –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞, –µ—Å–ª–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ " \
              "—ç—Ç–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ —Å–æ–∑–¥–∞–Ω—ã –¥—Ä—É–≥–∏–µ ‚ùóÔ∏è\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –∫–∞–∫ —Å–æ–∑–¥–∞–≤–∞–ª–∏—Å—å —Ñ–∏–ª—å—Ç—Ä—ã /showfilters.\n" \
              "–ï—Å–ª–∏ –≤—ã —É–≤–µ—Ä–µ–Ω—ã –≤ —Å–≤–æ–∏—Ö –Ω–∞–º–µ—Ä–µ–Ω–∏—è—Ö, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å —Å–∏–º–≤–æ–ª –≤ —Å–∏–º–≤–æ–ª"
        reset_confirmations(user_id)
        is_confirmed[user_id]["delete_confirmed"] = (True, message.text)
    elif delete_confirmed[1] == message.text:
        msg = stat.delete_filter(filter_name, user_id)
        reset_confirmations(user_id)

    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, msg)


# –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—É –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–≤–æ–∏)
@bot.message_handler(commands=["showfilters"])
def handle_show_filters(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)

    user_filters_path = "{}/{}/user_{}_filters.json".format(stat.dir_path, "users_filters", user_id)
    if os.path.isfile(user_filters_path):
        msg = ""
        with open(user_filters_path, "r") as f:
            user_filters = json.load(f)

        if len(user_filters) != 0:
            for filter_name in user_filters:
                msg += "‚Ä¢ <b>" + filter_name + "</b> ‚ü∂ " + user_filters[filter_name][1] + "\n"
        else:
            msg += "–í—ã –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –µ—â–µ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ ü§∑‚Äç"
    else:
        msg = "–í—ã –Ω–µ —Å–æ–∑–¥–∞–ª–∏ –µ—â–µ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ ü§∑‚Äç‚ôÄÔ∏è"

    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, msg, parse_mode='HTML')


# –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –∏ –≤—ã—Å—ã–ª–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–µ—Å–ª–∏ >= 50 –ú–ë, —Ç–æ –∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º –∏ –≤—ã—Å—ã–ª–∞–µ–º)
@bot.message_handler(commands=["filter"])
def handle_filter(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)

    if message.text == "/filter":
        handle_howfilter(message)
        return

    request = message.text[len("/filter "):]

    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, "–ü–∞—Ä—Å–∏–º –∑–∞–ø—Ä–æ—Å –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º...")

    success, result = stat.filter_(request, user_id)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ä–µ–∑ –±–∞–∑—ã –∏–ª–∏ —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ
    if not success:
        bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
        bot.send_message(user_id, result)
    else:
        bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
        bot.send_message(user_id,
                         "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ üòÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏–≤—à–∏—Ö –∑–∞–ø—Ä–æ—Å—É –ª–æ—Ç–æ–≤: {}\n–†–µ–∑—É–ª—å—Ç–∞—Ç:".format(
                             len(result)))

        date, t = str(datetime.datetime.now()).split(".")[0][:-3].split(" ")
        time = t[:2] + "-" + t[3:]
        filtered_name = "filtered_" + date + "_" + time + ".csv"
        filtered_path = create_filtered_data(filtered_name, result)

        filtered_size = os.path.getsize(filtered_path)
        if filtered_size < (54 * 1024 * 1024):
            bot.send_chat_action(user_id, action=telegram.ChatAction.UPLOAD_DOCUMENT)
            with open(filtered_path, "r") as f:
                bot.send_document(user_id, f)
        else:
            msg = "‚ùóÔ∏è –†–∞–∑–º–µ—Ä csv –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–µ–Ω 50 –ú–ë, —á—Ç–æ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ " \
                  "—á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä—ã Telegram ‚ùóÔ∏è\n –í—ã—Å—ã–ª–∞–µ–º –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–π csv"
            bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
            bot.send_message(user_id, msg)
            send_archived(filtered_path, user_id)
        os.remove(filtered_path)


# –ù–∞–ø–æ–º–Ω–∏—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∑–∞–ø—Ä–æ—Å–æ–≤ (–∫–∞–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å)
@bot.message_handler(commands=["howfilter"])
def handle_howfilter(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)

    msg = "–ö–∞–∫ –ø–∏—Å–∞—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö üìä\n\n"
    msg += "–í —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –∑–∞–ø—Ä–æ—Å–∞ –≤—Å–µ–≥–¥–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–∏–º–≤–æ–ª –æ–ø–µ—Ä–∞—Ü–∏–∏ - *&* –∏–ª–∏ *|*, " \
           "–∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–ª–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ\n\n"
    msg += "–î–∞–ª–µ–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ, –æ–Ω–∏ –∂–µ —Å–ª—É–∂–µ–±–Ω—ã–µ, —Å–ª–æ–≤–∞ (–≤—ã–¥–µ–ª–µ–Ω—ã –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º) " \
           "–∏ –∏—Ö –≤–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è. –ò–º–µ–π—Ç–µ –≤ –≤–∏–¥—É, —á—Ç–æ *–∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å (–≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏) " \
           "—Å–ª—É–∂–µ–±–Ω—ã–µ —Å–ª–æ–≤–∞*. –¢.–µ. –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–¥–∑–∞–ø—Ä–æ—Å _–∑–∞–≥–æ–ª–æ–≤–æ–∫=–ø—Ä–µ–¥–º–µ—Ç–Ω—ã–µ_ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, —Ç.–∫. " \
           "*–ø—Ä–µ–¥–º* - —Å–ª—É–∂–µ–±–Ω–æ–µ —Å–ª–æ–≤–æ, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ _–ø—Ä–µ–¥–º–µ—Ç–Ω—ã–µ_ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–∞–∫—É—é –ø–æ–¥—Å—Ç—Ä–æ–∫—É\n\n"
    msg += "*(!) –ü–µ—Ä–µ–¥ —Å–ª—É–∂–µ–±–Ω—ã–º —Å–ª–æ–≤–æ–º –æ–∑–Ω–∞—á–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞ —Å –æ—Ç—Ä–∏—Ü–∞–Ω–∏–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —ç—Ç–æ–º—É " \
           "–∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É*\n\n"
    msg += "(!)*—Å—Ç–∞—Ç—É—Å–ª*–æ—Ç–∞:        –æ - –æ—Ç–∫—Ä—ã—Ç\n                                 –∑ - –∑–∞–∫—Ä—ã—Ç\n" \
           "                                 —É - —É–¥–∞–ª–µ–Ω\n\n"
    msg += "*—Å—Ç–∞–≤–∫*–∞:                   0 - —Å—Ç–∞–≤–∫–∞ –Ω–µ —Å–¥–µ–ª–∞–Ω–∞\n                                 " \
           "1 - —Å—Ç–∞–≤–∫–∞ —Å–¥–µ–ª–∞–Ω–∞\n\n"
    msg += "(!)*—Ç–∏–ø*:                      –∞ - –ê—É–∫—Ü–∏–æ–Ω\n                                 " \
           "–æ - –û–±—ä—è–≤–ª–µ–Ω–∏–µ\n                                 —Å - –°—Ç–∞—Ä–æ—Ñ–æ—Ä–º–∞—Ç–Ω–æ–µ\n\n"
    msg += "(!)*–ø—Ä–µ–¥–º*–µ—Ç:            0 - –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ\n                                 " \
           "–Ω - –ù–∞–∫–ª–µ–π–∫–∏\n                                 –∫ - –ö–∞—Ä—Ç–æ—á–∫–∏\n                                 " \
           "–¥ - –î—Ä—É–≥–æ–µ\n\n"
    msg += "(!)*–∫–∞—Ç–µ–≥*–æ—Ä–∏—è:         –¥—Å - –î—Ä—É–≥–∏–µ –≤–∏–¥—ã —Å–ø–æ—Ä—Ç–∞\n                                 " \
           "–º–∫ - –ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã –∏ –∫–∏–Ω–æ\n                                 —Ñ–Ω/—Ñ–∫ - –§—É—Ç–±–æ–ª—å–Ω—ã–µ –Ω–∞–∫–ª–µ–π–∫–∏/–∫–∞—Ä—Ç–æ—á–∫–∏\n" \
           "                                 —Ö–Ω/—Ö–∫ - –•–æ–∫–∫–µ–π–Ω—ã–µ –Ω–∞–∫–ª–µ–π–∫–∏/–∫–∞—Ä—Ç–æ—á–∫–∏\n                                 " \
           "–ø–Ω/–ø–∫ - –ü—Ä–æ—á–∏–µ –Ω–∞–∫–ª–µ–π–∫–∏/–∫–∞—Ä—Ç–æ—á–∫–∏\n                                 –∫–∏ - –ö–ö–ò\n\n"
    msg += "*—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å*:       –≤ - –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ—Ç–∞\n                                 —Ü - –ø–æ —Ü–µ–Ω–µ –ø—Ä–æ–¥–∞–∂–∏\n" \
           "                                 –∫ - –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∫–æ–ª–ª–µ–∫—Ü–∏–∏\n\n"
    msg += "(!)*–ø—Ä–æ–¥–∞–≤–µ*—Ü: –æ–¥–Ω–æ —Å–ª–æ–≤–æ, —Ä–µ–≥–∏—Å—Ç—Ä –≤–∞–∂–µ–Ω\n\n"
    msg += "(!)*–ø–æ–∫—É–ø–∞—Ç*–µ–ª—å: –æ–¥–Ω–æ —Å–ª–æ–≤–æ, —Ä–µ–≥–∏—Å—Ç—Ä –≤–∞–∂–µ–Ω\n\n"
    msg += "*–Ω–µ—Ä–∞–Ω—å—à*–µ –∏–ª–∏ *–Ω–µ—Ä–∞–Ω–µ–µ*: –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥ (–Ω–µ—Ä–∞–Ω—å—à–µ _–ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é_)\n\n"
    msg += "*–Ω–µ–ø–æ–∑–¥–Ω–µ*–µ –∏–ª–∏ *–Ω–µ–ø–æ–∑–∂*–µ: –¥–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥ (–Ω–µ–ø–æ–∑–∂–µ _–ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é_)\n\n"
    msg += "(!)*–∫–æ–ª–ª–µ–∫*—Ü–∏—è: –æ–¥–Ω–æ —Å–ª–æ–≤–æ –∏–ª–∏ —Å–ª–æ–≤–∞, —Ä–∞–∑–¥–µ–ª—è–µ–º—ã–µ –∑–Ω–∞–∫–æ–º +; —Ä–µ–≥–∏—Å—Ç—Ä –Ω–µ–≤–∞–∂–µ–Ω. " \
           "!–∫–æ–ª–ª–µ–∫—Ü–∏—è={}+{}+... –æ–∑–Ω–∞—á–∞–µ—Ç, –Ω–∞–π—Ç–∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è={}+{}+... –∏ –≤—ã–±—Ä–æ—Å–∏—Ç—å —ç—Ç–∏ –∑–∞–ø–∏—Å–∏ –∏–∑ " \
           "—Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (—Ç.–µ. –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–µ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏, –∞ *–æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ* –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å " \
           "–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –ø–æ–¥—Å—Ç—Ä–æ–∫)\n\n"
    msg += "(!)*–∑–∞–≥–æ–ª*–æ–≤–æ–∫: –æ–¥–Ω–æ —Å–ª–æ–≤–æ –∏–ª–∏ —Å–ª–æ–≤–∞, —Ä–∞–∑–¥–µ–ª—è–µ–º—ã–µ –∑–Ω–∞–∫–æ–º +; —Ä–µ–≥–∏—Å—Ç—Ä –Ω–µ–≤–∞–∂–µ–Ω. " \
           "!–∑–∞–≥–æ–ª–æ–≤–æ–∫={}+{}+... —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ !–∫–æ–ª–ª–µ–∫—Ü–∏—è={}+{}+..., —Å–º. –≤—ã—à–µ\n\n"
    msg += "*–º–æ–∏—Ñ–∏–ª—å—Ç—Ä—ã*: –æ–¥–Ω–æ —Å–ª–æ–≤–æ –∏–ª–∏ —Å–ª–æ–≤–∞, —Ä–∞–∑–¥–µ–ª—è–µ–º—ã–µ –∑–Ω–∞–∫–æ–º +; —Ä–µ–≥–∏—Å—Ç—Ä –≤–∞–∂–µ–Ω\n\n"
    msg += "–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:\n\n*| –∫–∞—Ç–µ–≥–æ—Ä–∏—è=–º–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å=—Ü* ‚ü∂ –≤—ã–≤–µ—Å—Ç–∏ –ª–æ—Ç—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã " \
           "–∏ –∫–∏–Ω–æ –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —Ü–µ–Ω–µ –ø—Ä–æ–¥–∞–∂–∏ (–æ–ø–µ—Ä–∞—Ü–∏—è –Ω–µ –≤–∞–∂–Ω–∞, –∫–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—É—é—Ç—Å—è –ø–æ " \
           "–æ–¥–Ω–æ–º—É –∫–ª—é—á—É –ø–ª—é—Å, –≤–æ–∑–º–æ–∂–Ω–æ, —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è)\n\n"
    msg += "*& –∫–æ–ª–ª–µ–∫—Ü–∏—è=–ø–æ—Ç—Ç–µ—Ä+panini –æ—Ç–∫—Ä—ã—Ç !–ø—Ä–æ–¥–∞–≤–µ—Ü=dfyz* ‚ü∂ –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –ª–æ—Ç—ã, –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö " \
           "–µ—Å—Ç—å —Å–ª–æ–≤–∞ –ø–æ—Ç—Ç–µ—Ä –∏ panini (–ª—é–±–æ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞), —Ç–∞–∫–∏–µ —á—Ç–æ –∏—Ö —Ä–∞–∑–º–µ—â–∞–ª –Ω–µ dfyz\n\n"
    msg += "*& !–∫–æ–ª–ª–µ–∫—Ü–∏—è=–ø–æ—Ç—Ç–µ—Ä+panini –æ—Ç–∫—Ä—ã—Ç —Å—Ç–∞–≤–∫–∞=1* ‚ü∂ –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –ª–æ—Ç—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Å–¥–µ–ª–∞–Ω–∞ " \
           "—Å—Ç–∞–≤–∫–∞ (–ø–æ–ª—É—á–∞–µ—Ç—Å—è, –∞—É–∫—Ü–∏–æ–Ω—ã), —Ç–∞–∫–∏–µ —á—Ç–æ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ *–æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ* –Ω–µ—Ç –¥–≤—É—Ö —Å–ª–æ–≤ - " \
           "–ø–æ—Ç—Ç–µ—Ä –∏ panini (*—Ç–æ–ª—å–∫–æ –ø–æ—Ç—Ç–µ—Ä –∏–ª–∏ —Ç–æ–ª—å–∫–æ panini –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –±—ã—Ç—å –º–æ–≥—É—Ç*)\n\n"
    msg += "*| –º–æ–∏—Ñ–∏–ª—å—Ç—Ä—ã=–ì–ü–æ—Ç–∫—Ä+–ì–ü–∑–∞–∫—Ä+–ì–ü—Å—Ç–∞—Ä* ‚ü∂ –≤—ã–≤–µ—Å—Ç–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ì–ü–æ—Ç–∫—Ä, –ì–ü–∑–∞–∫—Ä –∏ –ì–ü—Å—Ç–∞—Ä"
    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, msg, parse_mode="Markdown")


# –†–∞–∑–æ—Å–ª–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å –æ—Ç –∏–º–µ–Ω–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ –Ω–æ–≤–æ–π –≤–Ω–µ–¥—Ä–µ–Ω–Ω–æ–π —Ñ–∏—á–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞
@bot.message_handler(commands=["notify"])
def handle_notify(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)
    global bot_config

    if user_id not in bot_config["ADMIN_IDS"]:
        bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
        bot.send_message(user_id, "–í—ã –Ω–µ –∞–¥–º–∏–Ω, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º üòü")
        return

    msg = "*–ù–æ–≤–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤*\n\n"
    msg += message.text[len("/notify "):]
    for to_id in bot_config["allowed_ids"]:
        bot.send_message(to_id, msg, parse_mode="Markdown")


# –ï—Å–ª–∏ –Ω–µ –Ω–∞–±—Ä–∞–ª–∏ –Ω–µ –æ–¥–Ω—É –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
@bot.message_handler(func=lambda msg: True)
def handle_anything(message):
    user_id = message.from_user.id
    reset_confirmations(user_id)

    msg = "–í—ã –Ω–µ –Ω–∞–±—Ä–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π –∏–∑–≤–µ—Å—Ç–Ω–æ–π –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—ã. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ /help"
    bot.send_chat_action(user_id, action=telegram.ChatAction.TYPING)
    bot.send_message(user_id, msg)


bot.infinity_polling()
